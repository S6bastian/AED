#include <iostream>
#include <stack>
#include <tuple>

using namespace std;

char m[19][19] =
{
    { ' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '},
    { ' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','b','#','#','#','#','#','#',' ',' '},
    { ' ',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' '},
    { ' ',' ','#','#',' ',' ','#',' ',' ',' ','#',' ','#',' ','#',' ','#','#',' '},
    { ' ',' ','#',' ',' ','#','#',' ',' ','#','#',' ','#',' ','#',' ',' ','#',' '},
    { ' ',' ','#',' ',' ','#',' ',' ','#','#',' ',' ','#',' ','#','#',' ','#',' '},
    { ' ','#','#',' ','#','#',' ','#','#',' ',' ','#','#',' ',' ','#',' ','#',' '},
    { ' ','#',' ',' ','#',' ',' ','#','#',' ',' ','#',' ',' ',' ','#',' ','#',' '},
    { ' ','#',' ',' ','#','#',' ',' ','#',' ','#','#',' ','#','#','#',' ','#',' '},
    { ' ','#','#',' ',' ','#',' ',' ','#',' ','#',' ',' ','#',' ',' ',' ','#',' '},
    { ' ',' ','#','#',' ','#','#',' ','#',' ','#',' ',' ','#',' ',' ','#','#',' '},
    { ' ',' ',' ','#','#','#','#','#','#',' ','#','#','#','#','#','#','#',' ',' '},
    { ' ',' ',' ',' ',' ',' ',' ',' ','#',' ','#','#',' ',' ',' ',' ',' ',' ',' '},
    { ' ',' ',' ',' ',' ',' ',' ',' ','#','a','#',' ',' ',' ',' ',' ',' ',' ',' '},
    { ' ',' ','#','#','#','#',' ','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' '},
    { ' ','#','#',' ',' ','#','#','#',' ','#',' ','#','#','#',' ',' ',' ',' ',' '},
    { ' ',' ','#',' ',' ',' ','#',' ',' ','#',' ',' ',' ','#','#',' ',' ',' ',' '},
    { ' ',' ','#',' ',' ',' ',' ',' ',' ','#','#',' ',' ',' ','#','#',' ',' ',' '},
    { ' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' '}
};

void printm()
{
    for (int j = 0; j < 19;j++)
    {
        for (int i = 0; i < 19;i++)
            std::cout << m[j][i] << " ";
        std::cout << "\n";
    }
}

bool founded = 0;

void traverse(int x, int y,int bx, int by) {
    if (x >= 19 || x < 0 || y >= 19 || y < 0 || m[y][x] == ' ')
        return;
    
    if (m[y][x] == 'b') {
        founded = 1;
        cout << "\nSUCCESS\n";
        m[y][x] = '.';
        return;
    }

    m[y][x] = '.';
    //printm();
    
    if (founded)
        return;

    
    
    int h = 0, v = 0;

    if (bx - x > 0)
        h = 1;
    else //if (bx - x < 0)
        h = -1;

    if (by - y > 0)
        v = 1;
    else //if (by - y < 0)
        v = -1;


    if (m[y + v][x] == '#') {    
        traverse(x , y + v, bx, by);
    }
    if (founded)
        return;

    if (m[y][x + h] == '#' || m[y][x + h] == 'b') {
        traverse(x + h, y, bx, by);
    }
    if (founded)
        return;

    if (m[y - v][x] == '#') {
        traverse(x, y - v, bx, by);
    }
    if (founded)
        return;

    if (m[y][x - h] == '#') {
        traverse(x - h, y, bx, by);
    }
    if (founded)
        return;
    
}

void search()
{
    // a ===> y=13,x=9 m[13][9]
    // b ===> y=1,x=10 m[1][10]
    
    traverse(9, 13, 10, 1);
}

int main()
{
    printm();
    search();
    printm();
}